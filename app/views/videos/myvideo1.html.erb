<!-- Partea de sus a fișierului app/views/home/about.html.erb -->
<% content_for :custom_js do %>
    <%= raw File.read(Rails.root.join('app', 'javascript', 'epytv.js')) %>
<% end %>

<style>
/* Stilurile CSS rămân neschimbate */
#video {
    width: 100%;
    max-width: 640px;
    margin: 0 auto;
}

.video-js {
    width: 100% !important;
    height: auto !important;
}
</style>

<section class="c1" style="padding: 0 10px;"></br>

<div class="cont">
<h1 style="text-align: center; padding: 0 10px; font-size:1.8em;"><%= @myvideo1.nume %></h1></br>

<!-- Player principal -->
<div style="width: 100%; max-width: 640px; max-height: 360px; margin: 0 auto; background-image: url(<%= asset_path 'player.png' %>); background-size: 100%;">
    <div class="epyv-video-container" id="epyv-container[<%= @myvideo %>]">
        <div id="epytvPlayButton[<%= @myvideo %>]" class="play-button" onClick="clickToPlay('<%= @myvideo %>');"></div>
        <img id="epytvImage[<%= @myvideo %>]" src="/thumbnails/video-thumbnail-filename" />
        <div class="epyv-video-player" id="<%= @myvideo %>" data-params="controls=1,rel=1,autoplay=0"></div>
        <div id="epytvPlayerCounter[<%= @myvideo %>]" class="playerCounter" style="visibility: hidden;">10</div>
    </div>
</div></br></br>

<% if @myvideo1.link_debian.present? %>
  <h1 class="name" style="font-size:1.8em;">Player video alternativ</h1>

  <div id="video" style="margin:0 auto; text-align:center; width: -webkit-fill-available; max-width: 640px; padding-bottom:10px;">
    <video id="secondaryPlayer" class="video-js vjs-default-skin vjs-big-play-centered" controls preload="auto" crossorigin="anonymous" width="640" height="360" playsinline>
      <source src="<%= @myvideo1.link_debian %>" type="application/x-mpegURL">
      <track kind="subtitles" src="subtitles_en.vtt" srclang="en" label="English" default>
      <track kind="subtitles" src="subtitles_fr.vtt" srclang="fr" label="French">
      <track kind="subtitles" src="subtitles_es.vtt" srclang="es" label="Spanish">
    </video>
  </div>

  <script src="https://vjs.zencdn.net/7.20.3/video.js" id="videojs-script" defer></script>
  <link href="https://vjs.zencdn.net/7.20.3/video-js.css" rel="stylesheet" />

  <canvas id="container-error-35789" class="hidden-element tempCanvas" width="0" height="0" style="position: relative; top: -9999px; left: -9999px; pointer-events: none; z-index: -1;"></canvas>
</div>
<% end %>
</section>

<script>
// Token-ul JWT generat din server, disponibil în JavaScript
const token = "<%= generate_session_token %>";

// Script pentru playerul principal
document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('epyv-container[<%= @myvideo %>]')) {
        initializeMainPlayer('curs', 'container-error-35789');
    }
});

// Funcția pentru inițializarea playerului principal
function initializeMainPlayer(playerId, canvasId) {
    if (typeof videojs !== 'undefined') {
        var player = videojs(playerId, {
            controls: true,
            preload: 'auto',
            techOrder: ['html5'],
            fluid: true,
            responsive: true,
            aspectRatio: '16:9'
        });

        var canvas = document.getElementById(canvasId);
        if (canvas) {
            var ctx = canvas.getContext('2d');
            var watermark = " ";

            function drawWatermark() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                ctx.font = '12px Arial';
                ctx.fillStyle = 'rgba(255, 0, 0, 0.5)';
                ctx.fillText(watermark, 0, 0);
            }

            function updateCanvas() {
                drawWatermark();
                if (!player.paused() && !player.ended()) {
                    requestAnimationFrame(updateCanvas);
                }
            }

            player.on('play', function() {
                updateCanvas();
            });

            player.on('pause', function() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
            });

            player.on('ended', function() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
            });
        }
    }
}

// Funcția pentru inițializarea playerului secundar
function initializeSecondaryPlayer() {
    if (typeof videojs !== 'undefined' && document.getElementById('secondaryPlayer')) {
        var player = videojs('secondaryPlayer', {
            controls: true,
            preload: 'auto',
            techOrder: ['html5'],
            fluid: true,
            responsive: true,
            aspectRatio: '16:9'
        });

        player.on('ready', function() {
            player.trigger('resize');
        });

        // Obține cheia de decriptare folosind token-ul
        fetch("https://ayushcell.ro/priority_flag", {
            method: "GET",
            headers: {
                "Authorization": `Bearer ${token}`
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error("Token invalid sau expirat");
            }
            return response.text();
        })
        .then(data => {
            console.log("Cheia de decriptare:", data); // va afișa "True"
            // Poți folosi cheia pentru decriptare dacă este necesar
        })
        .catch(error => console.error("Eroare:", error));
    }
}

// Apelează funcția de inițializare la încărcarea DOM
document.addEventListener('DOMContentLoaded', function() {
    initializeSecondaryPlayer();
});

// Așteaptă încărcarea completă a scriptului video.js pentru al doilea player
const videoJsScript = document.getElementById('videojs-script');
if (videoJsScript) {
    videoJsScript.addEventListener('load', function() {
        initializeSecondaryPlayer();
    });
});

// Reîncărcare player secundar la fiecare reîncărcare prin Turbo
document.addEventListener('turbo:load', function() {
    initializeSecondaryPlayer();
});

<%= yield :custom_js %>
</script>
