<style>
.large-textarea {
  width: 100%; /* sau o lățime specifică, cum ar fi 500px */
  height: 200px; /* înălțimea casetei de text */
}
.spanview span{
  margin-bottom:10px;
}

</style>

<%= form_with(model: contracte) do |form| %>
  <% if contracte.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(contracte.errors.count, "error") %> prohibited this contract from being saved:</h2>
      <ul>
        <% contracte.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="spanview">
    <h2 style="font-size:22px;">Pachet contract nr. <%= form.object.id || "Nou" %> din data <%= form.object.created_at&.strftime("%d %B %Y") || "Curentă" %></h2>

    <p style="margin:10px 0 0 0;"><strong>Date Asociație:</strong></p>
    <span><strong>Email contractor: </strong><%= form.text_field :email %></span><span>, </span>
    <span><strong>Tip Contract: </strong><%= form.text_field :tip %></span><span>, </span>
    <span><strong>Denumire contract: </strong><%= form.text_field :denumire %></span><span>, </span>
    <span><strong>Serie Contract: </strong><%= form.text_field :cod_contract %></span><span>, </span>
    <span><strong>Număr start Contract: </strong><%= form.number_field :contor_start %></span><span>, </span>
    <span><strong>Reprezentant Instituție: </strong><%= form.text_field :reprezentant_firma %></span><span>, </span>
    <span><strong>Calitate reprezentant: </strong><%= form.text_field :calitate_reprezentant %></span><span>, </span>
    <span><strong>Instituție: </strong><%= form.text_field :nume_firma %></span><span>, </span>
    <span><strong>Sediu Instituție: </strong><%= form.text_field :sediu_firma %></span><span>, </span>
    <span><strong>Cont Bancar: </strong><%= form.text_field :cont_bancar %></span><span>, </span>
    <span><strong>Banca Instituției: </strong><%= form.text_field :banca_firma %></span><span>, </span>
    <span><strong>CUI: </strong><%= form.text_field :cui_firma %></span><span>.</span>

    <p style="margin:10px 0 0 0;"><strong>Date Voluntari:</strong></p>
    <span><strong>Denumire Post Voluntar: </strong><%= form.text_field :denumire_post %></span><span>, </span>
    <span><strong>Locul desfășurării activității: </strong><%= form.text_field :locul_desfasurarii %></span><span>, </span>
    <span><strong>Departament: </strong><%= form.text_field :departament %></span><span>, </span>
    <span><strong>Relații funcționale cu: </strong><%= form.text_field :relatii_functionale %></span><span>, </span>
    <span><strong>Sarcini voluntar: </strong><%= form.text_area :sarcini_voluntar, rows: 3 %></span><span>, </span>
    <span><strong>Valabilitate pachet (luni): </strong><%= form.number_field :valabilitate_luni %></span>
  </div>

  <%= form.submit "Salvează" %>
<% end %>



<script>
var isDrawing = false; // Variabila globală

document.addEventListener("turbo:load", function() {
    var canvas = document.getElementById('signature-pad');
    var hiddenField = document.getElementById('semnatura_admin');

    if (canvas && hiddenField) {
        var context = canvas.getContext('2d');

        // Încărcarea semnăturii existente
        if (hiddenField.value) {
            var image = new Image();
            image.onload = function() {
                context.drawImage(image, 0, 0);
            };
            image.src = hiddenField.value;
        }

        // Evenimentele pentru desenarea pe canvas
        attachCanvasEvents(canvas, context);

        // Salvarea semnăturii la trimiterea formularului
        var form = document.querySelector('form');
        if (form) {
            form.addEventListener('submit', function(event) {
                event.preventDefault(); // Opriți trimiterea imediată a formularului

                // Verificați dacă există o semnătură pe canvas înainte de a salva
                if (!isCanvasBlank(canvas)) {
                    var dataURL = canvas.toDataURL();
                    hiddenField.value = dataURL;
                }

                setTimeout(function() {
                    form.submit(); // Trimiteți formularul după o întârziere
                }, 100); // Întârziere de 100 milisecunde
            });
        }
    }
});

function attachCanvasEvents(canvas, context) {
    canvas.addEventListener('mousedown', function(event) {
        isDrawing = true;
        startDrawing(event, context);
    });

    canvas.addEventListener('mousemove', function(event) {
        if (isDrawing) {
            continueDrawing(event, context);
        }
    });

    canvas.addEventListener('mouseup', function() {
        isDrawing = false;
    });

    canvas.addEventListener('mouseleave', function() {
        isDrawing = false;
    });
}

function startDrawing(event, context) {
    var x = event.offsetX;
    var y = event.offsetY;
    context.beginPath();
    context.moveTo(x, y);
}

function continueDrawing(event, context) {
    context.lineTo(event.offsetX, event.offsetY);
    context.stroke();
}

function isCanvasBlank(canvas) {
    return !canvas.getContext('2d')
      .getImageData(0, 0, canvas.width, canvas.height).data
      .some(channel => channel !== 0);
}

function clearSignature() {
    var canvas = document.getElementById('signature-pad');
    var hiddenField = document.getElementById('semnatura_admin');
    
    if (canvas && hiddenField) {
        var context = canvas.getContext('2d');
        context.clearRect(0, 0, canvas.width, canvas.height);
        hiddenField.value = '';
    }
}
</script>

