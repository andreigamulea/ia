<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Video.js MP4 Player</title>

  <!-- Include Video.js CSS -->
  <link href="https://vjs.zencdn.net/7.11.4/video-js.css" rel="stylesheet" />

  <!-- Include Video.js script -->
  <script src="https://vjs.zencdn.net/7.11.4/video.min.js"></script>
</head>
<body>

  <h1>Test Video Player (MP4)</h1>

  <!-- Afișează mesajul general -->
  <p><%= @message %></p>

  <!-- Debugging detaliat pentru fișierul video -->
  <h3>Debugging fișier video</h3>
  <p><strong>URL Video:</strong> <%= @video_url %></p>
  <% if @video_response_debug.present? %>
    <p><strong>Răspuns HTTP Video:</strong> <%= @video_response_debug %></p>
  <% else %>
    <p>Răspuns HTTP Video: Informații indisponibile</p>
  <% end %>

  <!-- Debugging detaliat pentru subtitrări -->
  <h3>Debugging subtitrări</h3>
  <p><strong>URL Subtitrări:</strong> <%= @subtitle_url %></p>
  <% if @subtitle_response_debug.present? %>
    <p><strong>Răspuns HTTP Subtitrări:</strong> <%= @subtitle_response_debug %></p>
  <% else %>
    <p>Răspuns HTTP Subtitrări: Informații indisponibile</p>
  <% end %>

  <!-- Playerul Video.js pentru MP4 -->
  <% if @video_url.present? %>
    <video id="my-video" class="video-js" controls preload="auto" width="640" height="360" data-setup="{}" oncontextmenu="return false;" controlsList="nodownload">
      <source id="videoSource" src="<%= @video_url %>" type="video/mp4">
      <% if @subtitle_url.present? %>
        <track src="<%= @subtitle_url %>" kind="subtitles" srclang="en" label="English" default>
      <% end %>
      Your browser does not support the video tag.
    </video>
  <% else %>
    <p>Video-ul nu este disponibil.</p>
  <% end %>

  <!-- Inițializarea Video.js -->
  <script>
    var player = videojs('my-video');
    player.ready(function() {
      console.log('Player is ready');
    });

    // Interval de reînnoire (8 minute/20s)
    const renewInterval = 1 * 20 * 1000;

    function renewPresignedUrl() {
      fetch('/get_new_presigned_url')
        .then(response => response.json())
        .then(data => {
          if (data.video_url) {
            var videoSource = document.getElementById('videoSource');
            videoSource.src = data.video_url;
            player.load();  // Reînnoiește playerul cu noul URL
          }
        })
        .catch(error => console.error('Eroare la reînnoirea URL-ului presemnat:', error));
    }

    // Setează un interval pentru a reînnoi URL-ul la fiecare 8 minute
    setInterval(renewPresignedUrl, renewInterval);
  </script>

</body>
</html>
