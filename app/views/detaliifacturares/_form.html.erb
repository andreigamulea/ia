<style>
.dropdown-menu {
  border: 1px solid #ccc;
  background-color: white;
  max-height: 200px;
  overflow-y: auto;
  position: absolute;
  z-index: 1000;
  width: 100%;
}

.dropdown-item {
  padding: 8px;
  cursor: pointer;
}

.dropdown-item:hover {
  background-color: #f0f0f0;
}

</style>
<% if user_signed_in? %> 
<div class="c1">

  <div class="row rowrev c1">
  
  <div class="col10">
  <%= form_with(model: @detaliifacturare, 
    url: @detaliifacturare.new_record? ? detaliifacturares_path(s: params[:s], cantitate: params[:cantitate],
    pret_bucata: params[:pret_bucata], pret_total: params[:pret_total], obs: params[:obs])  : detaliifacturare_path(@detaliifacturare, s: params[:s],
    cantitate: params[:cantitate], pret_bucata: params[:pret_bucata], pret_total: params[:pret_total],obs: params[:obs]), 
    method: @detaliifacturare.new_record? ? :post : :patch, remote: true, class: 'needs-validation', data: { turbo: false }) do |f| %>


  
  


      <% if @detaliifacturare.errors.any? %>
        <div class="alert alert-danger">
          <h4>Urmatoarele campuri nu sunt completate</h4>
          <ul>
            <% @detaliifacturare.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>

    <%= f.hidden_field :s, value: @prod.id %>
    
    <div class="mb-3 <%= 'has-error' if @detaliifacturare.errors[:prenume].any? %>">
        <%= f.label "Prenume*", class: "form-label" %>
        <%= f.text_field :prenume, class: "form-control" %>
    </div>

    <div class="mb-3 <%= 'has-error' if @detaliifacturare.errors[:nume].any? %>">
        <%= f.label "Nume*", class: "form-label" %>
        <%= f.text_field :nume, class: "form-control" %>
    </div>

    <div class="mb-3">
        <%= f.label "Nume companie (optional)", class: "form-label" %>
        <%= f.text_field :numecompanie, class: "form-control" %>
    </div>

    <div class="mb-3">
        <%= f.label "Cui/Cnp (optional)", class: "form-label" %>
        <%= f.text_field :cui, class: "form-control" %>
    </div>

  

    <div class="mb-3">
  <%= f.label :tara, "Țara", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :tara, class: "form-control", id: "tara_input", placeholder: "Selectează țara...", autocomplete: "off" %>
    <div id="tara_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>

<div class="mb-3">
  <%= f.label :judet, "Județ", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :judet, class: "form-control", id: "judet_input", placeholder: "Selectează județul...", autocomplete: "off" %>
    <div id="judet_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>

<div class="mb-3">
  <%= f.label :localitate, "Localitate", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :localitate, class: "form-control", id: "localitate_input", placeholder: "Selectează localitatea...", autocomplete: "off" %>
    <div id="localitate_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>






  

  <div class="mb-3 <%= 'has-error' if @detaliifacturare.errors[:strada].any? %>">
    <%= f.label "Strada*", class: "form-label" %>
    <%= f.text_field :strada, class: "form-control" %>
  </div>

  <div class="mb-3 <%= 'has-error' if @detaliifacturare.errors[:numar].any? %>">
    <%= f.label "Numar*", class: "form-label" %>
    <%= f.text_field :numar, class: "form-control" %>
  </div>
  <div class="mb-3">
  <%= f.label "Cod postal*", class: "form-label" %>
  <%= f.text_field :codpostal, class: "form-control" %>
</div>


  <div class="mb-3">
    <%= f.label "Bloc, Etaj, Apartament (optional)", class: "form-label" %>
    <%= f.text_area :altedate, class: "form-control", rows: 3 %>
  </div>

  <div class="mb-3 <%= 'has-error' if @detaliifacturare.errors[:telefon].any? %>">
    <%= f.label "Telefon*", class: "form-label" %>
    <%= f.text_field :telefon, class: "form-control" %>
  </div>

  <div class="mb-3 <%= 'has-error' if @detaliifacturare.errors[:adresaemail].any? %>">
  <%= f.label "Email*", class: "form-label" %>


    
    <%= f.text_field :adresaemail, class: "form-control", value: f.object.adresaemail.presence || current_user.email, readonly: true %>

  </div>




  <div class="mb-3">
  <%= f.label :use_alternate_shipping, class: "form-check-label" do %>
    <%= f.check_box :use_alternate_shipping, class: "form-check-input" %>
    <span style="color: red;">Informații pentru livrare (bifati si completați doar dacă adresa de livrare este diferită de cea de facturare):</span>
  <% end %>
</div>



<div id="alternate_shipping_fields" style="display: none;">
  
<div class="mb-3">
    <%= f.label "Prenume (livrare)*", class: "form-label" %>
    <%= f.text_field :prenume1, class: "form-control" %>
</div>

<div class="mb-3">
    <%= f.label "Nume (livrare)*", class: "form-label" %>
    <%= f.text_field :nume1, class: "form-control" %>
</div>
<div class="mb-3">
        <%= f.label "Nume companie (optional)", class: "form-label" %>
        <%= f.text_field :numecompanie1, class: "form-control" %>
    </div>
<div class="mb-3">
    <%= f.label "Tara (livrare)", class: "form-label" %>
    <%= f.text_field :tara1, class: "form-control", value: f.object.tara1.presence || "România" %>
</div>
    
<div class="mb-3">
  <%= f.label "Localitate (livrare)", class: "form-label" %>
  <%= f.text_field :localitate1, class: "form-control" %>
</div>

<div class="mb-3">
<%= f.label "Judet / Sector (livrare)", class: "form-label" %>
  <%= f.text_field :judet1, class: "form-control" %>
</div>



<div class="mb-3">
  <%= f.label "Strada (livrare)*", class: "form-label" %>
  <%= f.text_field :strada1, class: "form-control" %>
</div>

<div class="mb-3">
  <%= f.label "Numar (livrare)*", class: "form-label" %>
  <%= f.text_field :numar1, class: "form-control" %>
</div>
<div class="mb-3">
  <%= f.label "Cod postal (livrare)*", class: "form-label" %>
  <%= f.text_field :codpostal1, class: "form-control" %>
</div>
<div class="mb-3">
    <%= f.label "Bloc, Etaj, Apartament (optional)", class: "form-label" %>
    <%= f.text_area :altedate1, class: "form-control", rows: 3 %>
  </div>
<div class="mb-3">
  <%= f.label "Telefon (livrare)*", class: "form-label" %>
  <%= f.text_field :telefon1, class: "form-control" %>
</div>

</div>





    <div class="mb-3">   
    
      <%= f.submit "Cumpara", class: "btn btn-primary" %>
    </div>
<% end %>
</div>

<div class="col10 col10m">

  <h2 style="font-size:1.5em;"><%= @prod.nume %></h2>
  <p><%= @prod.detalii %></p>
  <% emailuri_90 = ["ce.hermkens@gmail.com","mileamihaela1975@gmail.com"] %>
  <% if current_user.email != "nagy.edvin@yahoo.com" %>
  
  <% if @cantitate.to_i > 1 %>
    Pret unitar: <%= @pret_bucata.to_f.round(2) %> lei</br>
    Cantitate: <%= @cantitate %> buc</br>
    Pret total: <%= @pret_total.to_f.round(2) %> lei</br>
  <% end %>

<% elsif current_user.email == "nagy.edvin@yahoo.com" && @prod.cod.in?(['cod16', 'cod17', 'cod18', 'cod19', 'cod20', 'cod21', 'cod22', 'cod23', 'cod24', 'cod25', 'cod207','cod197', 'cod198', 'cod199', 'cod200', 'cod201', 'cod202', 'cod203', 'cod204', 'cod205', 'cod206']) %>
  <p>Pret: <%= @prod.pret.to_f.round(2) - 145 %> lei</p></br>

<% elsif current_user.email == "nagy.edvin@yahoo.com" && !['cod16', 'cod17', 'cod18', 'cod19', 'cod20', 'cod21', 'cod22', 'cod23', 'cod24', 'cod25', 'cod207','cod197', 'cod198', 'cod199', 'cod200', 'cod201', 'cod202', 'cod203', 'cod204', 'cod205', 'cod206'].include?(@prod.cod) %>
  <p>Pret: <%= @prod.pret.to_f.round(2) %> lei</p></br>

<% elsif emailuri_90.include?(current_user.email) && @prod.cod.in?(['cod207','cod197', 'cod198', 'cod199', 'cod200', 'cod201', 'cod202', 'cod203', 'cod204', 'cod205', 'cod206']) %>
  <p>Pret: <%= @prod.pret.to_f.round(2) - 90 %> lei</p></br>
  
<% elsif emailuri_90.include?(current_user.email) && !['cod207','cod197', 'cod198', 'cod199', 'cod200', 'cod201', 'cod202', 'cod203', 'cod204', 'cod205', 'cod206'].include?(@prod.cod) %>
  <p>Pret: <%= @prod.pret.to_f.round(2) %> lei</p></br>
  
<% end %>
  <div class="column" style="display: flex; justify-content: center;">        
    <img src="<%= image_path('nutritie-ayushcell.jpg') %>" alt="Imagine" style="width: 100%; max-width:500px;">       
  </div>
</div>


    </div>
    
  </div>
</div>

<% else %>
<h1 class="mb-3">Trebuie să te loghezi pentru a vedea această pagină.</h1>
<%= link_to "Loghează-te aici", new_user_session_path, class: "btn btn-primary" %>

<% end %>

<script>
  $(document).ready(function() {
    // Ascunde sau afișează câmpurile în funcție de starea inițială a checkbox-ului
    if ($("[name='detaliifacturare[use_alternate_shipping]']").is(":checked")) {
      $("#alternate_shipping_fields").show();
    } else {
      $("#alternate_shipping_fields").hide();
    }

    // Adaugă un event listener pentru schimbarea stării checkbox-ului
    $("[name='detaliifacturare[use_alternate_shipping]']").change(function() {
      if ($(this).is(":checked")) {
        $("#alternate_shipping_fields").slideDown();
      } else {
        $("#alternate_shipping_fields").slideUp();
      }
    });
  });
</script>
<script>
document.addEventListener("turbo:load", function () {
  function setupAutocomplete(inputId, dropdownId, endpoint, filterId = null) {
    const input = document.getElementById(inputId);
    const dropdown = document.getElementById(dropdownId);
    let validSuggestions = []; // Stocăm sugestiile valide

    function updateDropdown(query, filterValue = null) {
      dropdown.innerHTML = ''; // Resetăm lista
      if (query.length > 1) {
        let url = `${endpoint}?q=${encodeURIComponent(query)}`;
        if (filterValue) {
          url += `&filter=${encodeURIComponent(filterValue)}`;
        }
        fetch(url)
          .then((response) => response.json())
          .then((data) => {
            validSuggestions = data; // Actualizăm lista sugestiilor valide
            if (data.length > 0) {
              dropdown.style.display = 'block';
              data.forEach((item) => {
                const option = document.createElement('a');
                option.classList.add('dropdown-item');
                option.textContent = item;
                option.href = '#';
                option.addEventListener('click', (e) => {
                  e.preventDefault();
                  input.value = item;
                  dropdown.style.display = 'none';
                });
                dropdown.appendChild(option);
              });
            } else {
              dropdown.style.display = 'none';
            }
          })
          .catch((error) => console.error("Eroare la încărcarea sugestiilor:", error));
      } else {
        validSuggestions = []; // Resetăm sugestiile valide
        dropdown.style.display = 'none';
      }
    }

    input.addEventListener('input', () => {
      const query = input.value.trim();
      const filterValue = filterId ? document.getElementById(filterId)?.value.trim() : null;
      updateDropdown(query, filterValue);
    });

    input.addEventListener('blur', () => {
      // Resetăm câmpul dacă valoarea nu este validă doar pentru România
      const tara = document.getElementById("tara_input")?.value.toLowerCase();
      if (tara === "romania" && !validSuggestions.includes(input.value)) {
        input.value = '';
      }
    });

    document.addEventListener('click', (event) => {
      if (!dropdown.contains(event.target) && event.target !== input) {
        dropdown.style.display = 'none';
      }
    });
  }

  // Configurează autocomplete pentru țară
  setupAutocomplete("tara_input", "tara_dropdown", "/autocomplete_tara");

  // Configurează autocomplete pentru județ
  setupAutocomplete("judet_input", "judet_dropdown", "/autocomplete_judet");

  // Configurează autocomplete pentru localități, cu filtrare pe județ
  setupAutocomplete("localitate_input", "localitate_dropdown", "/autocomplete_localitate", "judet_input");

  // Gestionăm activarea/dezactivarea funcționalității în funcție de țară
  const taraInput = document.getElementById("tara_input");
  const judetInput = document.getElementById("judet_input");
  const localitateInput = document.getElementById("localitate_input");

  taraInput.addEventListener("input", function () {
    const tara = taraInput.value.trim().toLowerCase();
    if (tara === "romania") {
      // Activează autocomplete pentru județ și localitate
      judetInput.disabled = false;
      localitateInput.disabled = false;

      // Resetăm valorile câmpurilor dacă anterior s-a completat pentru o țară străină
      judetInput.value = "";
      localitateInput.value = "";
    } else {
      // Permite completarea liberă pentru țările străine
      judetInput.disabled = false;
      localitateInput.disabled = false;
    }
  });
});
</script>


