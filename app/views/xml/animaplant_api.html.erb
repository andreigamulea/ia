<h1 style="text-align: center;">Facturi Importate</h1>
<div style="width: 100%; max-width: 500px; margin: 0 auto; text-align: center; padding: 20px; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #f9f9f9;">
  <h2 style="margin-bottom: 20px;">Selectează perioada</h2>
  
  <form id="facturiForm" method="get" action="<%= animaplant_api_path %>">
    <div style="margin-bottom: 15px;">
      <label for="data_inceput" style="display: block; font-weight: bold;">Data de început:</label>
      <input type="date" id="data_inceput" name="data_inceput" class="form-control" style="width: 100%; padding: 5px;">
    </div>
    
    <div style="margin-bottom: 15px;">
      <label for="data_sfarsit" style="display: block; font-weight: bold;">Data de sfârșit:</label>
      <input type="date" id="data_sfarsit" name="data_sfarsit" class="form-control" style="width: 100%; padding: 5px;">
    </div>
    
    <!-- Buton pentru afișarea facturilor -->
    <button type="submit" class="btn btn-primary" style="margin: 10px; padding: 10px 20px;">
      Afișează facturile
    </button>
  </form>
</div>

<% if @invoices1.present? %>
  <div style="width: 80%; margin: 20px auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: #fff;">
    <h2>Facturi Filtrate (După Perioadă)</h2>
    <table style="width: 100%; border-collapse: collapse;">
    <thead>
      <tr>
        <th style="border: 1px solid #ddd; padding: 8px;">Comanda</th>
        <th style="border: 1px solid #ddd; padding: 8px;">Data Comandă</th>
        <th style="border: 1px solid #ddd; padding: 8px;">Număr Factură</th>
        <th style="border: 1px solid #ddd; padding: 8px;">Data Factură</th>
        <th style="border: 1px solid #ddd; padding: 8px;">Total</th>
        <th style="border: 1px solid #ddd; padding: 8px;">Tip Persoană</th>
        <th style="border: 1px solid #ddd; padding: 8px;">Denumire</th>
        <th style="border: 1px solid #ddd; padding: 8px;">CUI</th>
        <th style="border: 1px solid #ddd; padding: 8px;">Descarcă XML</th>
        <th style="border: 1px solid #ddd; padding: 8px;">Descarcă PDF</th>
      </tr>
    </thead>
    <tbody>
      <% @invoices1.each do |invoice| %>
        <% is_legal_entity = invoice["CUI"] && invoice["CUI"] != "-" && invoice["CUI"] != "N/A" && invoice["CUI"] !~ /^0+$/ && (invoice["CUI"].gsub(/[^0-9]/, '').chars.uniq.reject { |c| c == '0' }.size >= 3) %>
        <tr>
          <td style="border: 1px solid #ddd; padding: 8px;"><%= invoice["numar_comanda"] %></td>
          <td style="border: 1px solid #ddd; padding: 8px;"><%= invoice["data_comanda"] %></td>
          <td style="border: 1px solid #ddd; padding: 8px;"><%= invoice["numar_factura"] %></td>
          <td style="border: 1px solid #ddd; padding: 8px;"><%= invoice["data_factura"] %></td>
          <td style="border: 1px solid #ddd; padding: 8px;"><%= invoice["total"] %></td>
          <td style="border: 1px solid #ddd; padding: 8px;">
            <%= is_legal_entity ? "Persoana Juridică" : "Persoana Fizică" %>
          </td>
          <td style="border: 1px solid #ddd; padding: 8px;">
            <%= is_legal_entity ? invoice["companie"].gsub(/^SC\s+/i, "").upcase : invoice["nume_client"].upcase %>
          </td>
          <td style="border: 1px solid #ddd; padding: 8px;">
            <%= (invoice["CUI"] == "N/A" || invoice["CUI"] == "-" || invoice["CUI"] =~ /^0+$/) ? "0000000000000" : invoice["CUI"] %>
          </td>
          <td style="border: 1px solid #ddd; padding: 8px;">
            <button class="btn btn-info" onclick="getFactura('<%= invoice['numar_comanda'] %>')">
              Factură XML
            </button>
          </td>
          <td style="border: 1px solid #ddd; padding: 8px;">
            <button class="btn btn-success" onclick="getFacturaPDF('<%= invoice['id_comanda'] %>')">
              Factură PDF
            </button>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
  </div>
<% end %>

<% if @invoices %>
  <pre><%= JSON.pretty_generate(@invoices) %></pre>
<% else %>
  <p><%= @error_message || "Nu există date disponibile." %></p>
<% end %>  

<script>
function getFactura(numarComanda) {
  let facturiJson = <%= raw @invoices.to_json %>;

  fetch('<%= xml_animaplant_path %>', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
    },
    body: JSON.stringify({
      numar_comanda: numarComanda,
      facturi_json: facturiJson
    })
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Eroare la generarea XML-ului');
    }
    return response.json();
  })
  .then(data => {
    const blob = new Blob([data.xml], { type: 'application/xml' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.style.display = 'none';
    a.href = url;
    a.download = data.filename;
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
  })
  .catch(error => {
    console.error('Eroare la generarea XML:', error);
    alert('A apărut o eroare la descărcarea XML-ului: ' + error.message);
  });
}

function getFacturaPDF(idComanda) {
  fetch('/xml/proxy_pdf', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
    },
    body: JSON.stringify({
      id_comanda: idComanda
    })
  })
  .then(response => {
    if (!response.ok) {
      return response.text().then(text => {
        throw new Error(`Eroare la generarea PDF-ului: ${response.status} - ${text}`);
      });
    }
    return response.blob();
  })
  .then(blob => {
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.style.display = 'none';
    a.href = url;
    a.download = `Factura_${idComanda}.pdf`;
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
  })
  .catch(error => {
    console.error('Eroare la generarea PDF:', error);
    alert('A apărut o eroare la descărcarea PDF-ului: ' + error.message);
  });
}
</script>