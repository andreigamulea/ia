
<style>

#civ form{
    width: -webkit-fill-available;
}
#civ .form-label, label {
    display: inline-block;
    margin-right: 5px;
    vertical-align: middle;
    margin-bottom: 3px;
}

#civ .form-input, input[type="text"], input[type="email"], input[type="submit"] {
    width: auto;
    padding: 8px;
    margin-bottom: 10px;
    box-sizing: border-box;
    display: inline-block;
    min-width: 290px;
}

#civ input[type="submit"] {
    display: block;
    margin: 10px auto;
    border: 1px solid #4b0082;
    background-color: #4b0082;
    color: white;
}
#civ .semnatura {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        text-align:center;
    }

   #civ .gazda, #civ .voluntar {
        max-width: 300px;
        flex: 1; 
    }
  

@media screen and (max-width: 600px) {
    #civ .form-input, #civ .form-label, #civ input[type="text"], #civ input[type="email"], #civ input[type="submit"], #civ label {
        width: 100%;
        display: block;
        margin-right: 0;
    }
    #civ form{
      display: flex;
      flex-direction: column;
    }
    #civ .gazda{
      text-align: left;
      padding-bottom:10px;
    }
    #civ .semnatura{
      flex-direction:column;
      align-items: center;
    }
    #civ #str{
      width: auto!important;
    }
}
#civ #str{
  width: 400px;;
}

#civ .voluntar {
    display: flex;
    flex-direction: column;
    align-items: flex-center;
}

#civ canvas {
    border: 1px solid #000;
    margin-top: -15px;
}

#civ .register {
    cursor: pointer;
    margin: 0 auto;
    width: auto;
}
#civ input[type="submit"]{
  margin-top:20px;
  width: auto;
  margin-left:auto;
  margin-right:auto;
}

</style>


<% content_for :title, "Cerere înscriere Voluntar 1 | Ayush Cell Romania"  %>
<% content_for :description, "Completare cerere de înscriere voluntar" %>

<% content_for :canonical do %>
  <link rel="canonical" href="https://www.ayushcell.ro/cerere_voluntar">
<% end %>

<div class="container" id="civ">
<%= render 'layouts/sideleft' %>

<div class="cr" style="background-color: aliceblue; ">
    <h1 class="first-tittle">Cerere de înscriere voluntar: Ayush Cell Romania</h1>
    <h2 class="main-title" >Completare cerere de înscriere ca voluntar</h2>
 


<form>


<label for="numar" class="form-label">Nr: </label><br><br>

<label for="nume" class="form-label">Subsemnatul/a, cu numele:</label>
<input type="text" id="nume" name="nume" class="form-input" placeholder="Introduceți numele de familie">
<label for="prenume" class="form-label">și prenumele:</label>
<input type="text" id="prenume" name="prenume" class="form-input" placeholder="Introduceți prenumele"><br>

<label class="form-label">având adresa de domiciliu </label>
strada <input type="text" name="strada" class="form-input" placeholder="Scrieți numele străzii">
numărul. <input type="text" name="numar_casa" class="form-input" style="width: 50px; min-width: 100px;" placeholder="Numărul">
<input type="text" name="bloc" placeholder="bloc, scară, etaj, apartament" class="form-input" id="str" ><br>


Localitatea: <input type="text" name="localitate" class="form-input" placeholder="Completați localitatea">
Județul: <input type="text" name="judet" class="form-input" placeholder="Județul"><br>

Telefon: <input type="text" name="telefon" class="form-input" placeholder="adăugați numărul de telefon">
E-mail: <input type="email" name="email" class="form-input" placeholder="introduceți adresa de e-mail"><br>


<p>prin prezenta, vă solicit acordul de a participa în calitate de voluntar la activitățile de voluntariat organizate de organizația dvs.</p>
<p>Menționez că îmi asum toate obligațiile prevăzute în contractul de voluntariat și în fișa de voluntariat.</p><br>



<div class="semnatura">
  <div class="gazda">
     Data: <span><%= Date.today.strftime('%d-%m-%Y') %></span>
  </div>

  <div class="voluntar">
    <p>Semnătura voluntar: </p>
    <span id="nume-voluntar-destinatie" style="width: -webkit-fill-available;"></span>
    <canvas id="signature-pad-3" width="auto" height="auto"></canvas><br><br>
    <button type="button" onclick="clearSignature(2)" class="register" style="margin-top: -30px;">Șterge Semnătura</button>

  </div>
</div>


<input type="submit" value="Trimite Cererea" class="register">

</form>

</div>
</div>


        <script>
        document.addEventListener("turbo:load", function() {
          initializeSignaturePad('signature-pad-3'); // Inițializează doar al doilea canvas
          
          var form = document.querySelector('form');
          form.addEventListener('submit', function() {
            saveSignatureOnSubmit('signature-pad-3', 'semnatura_voluntar'); // Folosește ID-ul corect al canvas-ului și câmpului ascuns
          });
          
          synchronizeFields('nume-voluntar-sursa',  'nume-voluntar-destinatie');
        });
        
        function synchronizeFields(sourceFieldId, targetElementId) {
            var sourceField = document.getElementById(sourceFieldId);
            var targetElement = document.getElementById(targetElementId);
        
            if (sourceField && targetElement) {
                sourceField.addEventListener('input', function() {
                    // Verifică dacă elementul țintă este un câmp de input sau alt tip de element
                    if ('value' in targetElement) {
                        // Pentru elemente de input, textarea, etc.
                        targetElement.value = sourceField.value;
                    } else {
                        // Pentru elemente non-input, cum ar fi span, div, etc.
                        targetElement.textContent = sourceField.value;
                    }
                });
            }
        }
        
        
        function saveSignatureOnSubmit(canvasId, hiddenFieldId) {
            var canvas = document.getElementById(canvasId);
            if (canvas) {
                var dataURL = canvas.toDataURL();
                document.getElementById(hiddenFieldId).value = dataURL; // Setează valoarea câmpului ascuns
            }
        }
        
        
        function initializeSignaturePad(canvasId) {
          var canvas = document.getElementById(canvasId);
          if (canvas) {
            var context = canvas.getContext('2d');
            var isDrawing = false;
        
            function startDrawing(event) {
              event.preventDefault(); // Împiedică derularea în timpul desenării
              isDrawing = true;
              var rect = canvas.getBoundingClientRect();
              var x = (event.clientX || event.touches[0].clientX) - rect.left;
              var y = (event.clientY || event.touches[0].clientY) - rect.top;
              context.beginPath();
              context.moveTo(x, y);
            }
        
            function continueDrawing(event) {
              event.preventDefault(); // Împiedică derularea în timpul desenării
              if (!isDrawing) return;
              var rect = canvas.getBoundingClientRect();
              var x = (event.clientX || event.touches[0].clientX) - rect.left;
              var y = (event.clientY || event.touches[0].clientY) - rect.top;
              context.lineTo(x, y);
              context.stroke();
            }
        
            function stopDrawing(event) {
              if (isDrawing) {
                event.preventDefault();  // Împiedică derularea și alte acțiuni implicite
                event.stopPropagation(); // Opriți propagarea evenimentului
                isDrawing = false;
              }
            }
        
            // Evenimente pentru mouse
            canvas.addEventListener('mousedown', startDrawing);
            canvas.addEventListener('mousemove', continueDrawing);
            canvas.addEventListener('mouseup', stopDrawing);
            canvas.addEventListener('mouseleave', stopDrawing);
        
            // Evenimente pentru touch (ecran tactil)
            canvas.addEventListener('touchstart', startDrawing);
            canvas.addEventListener('touchmove', continueDrawing);
            canvas.addEventListener('touchend', stopDrawing);
          }
        }
        
        
        function loadExistingSignature(canvasId) {
          var canvas = document.getElementById(canvasId);
          var context = canvas.getContext('2d');
          var existingSignature = "<%= @semnatura_admin %>";
        
          if (existingSignature) {
            var image = new Image();
            image.onload = function() {
              context.drawImage(image, 0, 0);
            };
            image.src = existingSignature;
          }
        }
        
        function saveSignature(padNumber) {
          var canvas = document.getElementById('signature-pad-3');
          var dataURL = canvas.toDataURL();
          console.log(dataURL);
          // Trimite dataURL la server
        }
        
        function clearSignature(padNumber) {
          var canvas = document.getElementById('signature-pad-3');
          var context = canvas.getContext('2d');
          context.clearRect(0, 0, canvas.width, canvas.height);
        }
        
        </script>
        
        